# This is a basic workflow to help you get started with Actions

name: windows

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  prebuilt_godot_editor_windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: 4.2

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          lfs: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      - name: Deps
        run: |
          curl https://github.com/ialex32x/GodotJS-Dependencies/releases/download/v8_r6/v8_r6.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip

      # Runs a set of commands using the runners shell
      - name: Build Godot
        run: |
          cd godot
          scons dev_build=yes p=windows

      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          path: godot/bin/*.*
          name: prebuilt_godot_editor_windows

  publish:
    runs-on: ubuntu-latest
    needs: 
      - prebuilt_godot_editor_windows
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: godot_editor/
          merge-multiple: true

      - name: packaging
        run: |
          sudo apt-get install zip unzip

          ls -R godot_editor
          zip -r godot_editor_${{ github.event.inputs.bundle_tag }}.zip godot_editor/

      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: godot_editor_${{ github.event.inputs.bundle_tag }}
          release_name: godot_editor_${{ github.event.inputs.bundle_tag }}
          draft: false
          prerelease: false
          body: |
            update godot editor
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: godot_editor_${{ github.event.inputs.bundle_tag }}.zip
          asset_name: godot_editor_${{ github.event.inputs.bundle_tag }}.zip
          asset_content_type: application/zip
