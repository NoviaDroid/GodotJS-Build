name: release

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      bundle_ver_tag:
        description: 'bundle version tag (disable publish if empty)'
        type: string
        required: false
        default: ""

      godotjs_ref:
        description: 'GodotJS ref (branch/tag/SHA)'
        type: string
        required: true
        default: "main"
  
      godot_ref:
        description: 'Godot Engine ref (branch/tag/SHA)'
        type: string
        required: true
        default: "4.3"

      deps_package_tag:
        description: 'deps package tag'
        type: string
        required: true
        default: "v8_12.4.254.21_r13"

      additional_scons_args:
        description: 'additional scons args'
        type: string
        required: false
        default: ""

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  editor_windows_x64_v8:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - name: Deps
        run: |
          Invoke-WebRequest -Uri https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip -OutFile v8.zip
          dir v8.zip
          7z x -ogodot/modules/GodotJS v8.zip
          dir godot/modules/GodotJS/v8
  
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      # Runs a set of commands using the runners shell
      - name: Build Godot
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=windows 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=windows 

      - name: Prepare artifact
        run: |          
          7z a -tzip editor_windows_x64_v8.zip godot/bin/

      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_windows_x64_v8
          path: editor_windows_x64_v8.zip

  editor_windows_x64_qjs:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - name: Deps
        run: |
          Invoke-WebRequest -Uri https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip -OutFile v8.zip
          dir v8.zip
          7z x -ogodot/modules/GodotJS v8.zip
          dir godot/modules/GodotJS/v8
  
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      # Runs a set of commands using the runners shell
      - name: Build Godot
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} use_quickjs=yes dev_build=yes p=windows 
          scons ${{ github.event.inputs.additional_scons_args }} use_quickjs=yes target=template_debug 
          scons ${{ github.event.inputs.additional_scons_args }} use_quickjs=yes target=template_release separate_debug_symbols=yes debug_symbols=yes p=windows 

      - name: Prepare artifact
        run: |          
          7z a -tzip editor_windows_x64_qjs.zip godot/bin/

      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_windows_x64_qjs
          path: editor_windows_x64_qjs.zip

  editor_windows_x64_qjs_ng:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - name: Deps
        run: |
          Invoke-WebRequest -Uri https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip -OutFile v8.zip
          dir v8.zip
          7z x -ogodot/modules/GodotJS v8.zip
          dir godot/modules/GodotJS/v8
  
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      # Runs a set of commands using the runners shell
      - name: Build Godot
        run: |
          cd godot

          scons ${{ github.event.inputs.additional_scons_args }} use_quickjs_ng=yes dev_build=yes p=windows 
          scons ${{ github.event.inputs.additional_scons_args }} use_quickjs_ng=yes target=template_debug 
          scons ${{ github.event.inputs.additional_scons_args }} use_quickjs_ng=yes target=template_release separate_debug_symbols=yes debug_symbols=yes p=windows 

      - name: Prepare artifact
        run: |          
          7z a -tzip editor_windows_x64_qjs_ng.zip godot/bin/

      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_windows_x64_qjs_ng
          path: editor_windows_x64_qjs_ng.zip
        
        
  editor_linux_x64_v8:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: |
          pip install scons
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev

      - name: Build Deps
        run: |
          curl -L https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip

      # Runs a set of commands using the runners shell
      - name: Build for x64
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=linuxbsd 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug p=linuxbsd   
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=linuxbsd   
  
      - name: Prepare artifact
        run: |
          strip godot/bin/godot.linuxbsd.*.x86_64
          chmod +x godot/bin/godot.linuxbsd.*.x86_64
          7z a -tzip editor_linux_x64_v8.zip godot/bin/
  
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_linux_x64_v8
          path: editor_linux_x64_v8.zip

  editor_linux_x64_qjs:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: |
          pip install scons
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev

      - name: Build Deps
        run: |
          curl -L https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip

      # Runs a set of commands using the runners shell
      - name: Build for x64
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=linuxbsd use_quickjs=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug p=linuxbsd use_quickjs=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=linuxbsd use_quickjs=yes 
  
      - name: Prepare artifact
        run: |
          strip godot/bin/godot.linuxbsd.*.x86_64
          chmod +x godot/bin/godot.linuxbsd.*.x86_64
          7z a -tzip editor_linux_x64_qjs.zip godot/bin/
  
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_linux_x64_qjs
          path: editor_linux_x64_qjs.zip

  editor_linux_x64_qjs_ng:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: |
          pip install scons
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev

      - name: Build Deps
        run: |
          curl -L https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip

      # Runs a set of commands using the runners shell
      - name: Build for x64
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=linuxbsd use_quickjs_ng=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug p=linuxbsd use_quickjs_ng=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=linuxbsd use_quickjs_ng=yes 
  
      - name: Prepare artifact
        run: |
          strip godot/bin/godot.linuxbsd.*.x86_64
          chmod +x godot/bin/godot.linuxbsd.*.x86_64
          7z a -tzip editor_linux_x64_qjs_ng.zip godot/bin/
  
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_linux_x64_qjs_ng
          path: editor_linux_x64_qjs_ng.zip
        
  editor_macos_arm64_v8:
    # The type of runner that the job will run on
    runs-on: macos-14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - uses: actions/checkout@v4
        with:
          path: Scripts
  
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      - name: Build Deps
        run: |
          curl -L https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip
          # sh godot/misc/scripts/install_vulkan_sdk_macos.sh
          chmod +x $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh
          $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh

      # Runs a set of commands using the runners shell
      - name: Build for arm64
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=macos arch=arm64 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug p=macos arch=arm64 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=macos arch=arm64 
  
      - name: Prepare artifact
        run: |
          strip godot/bin/godot.macos.*.arm64
          chmod +x godot/bin/godot.macos.*.arm64
          7z a -tzip editor_macos_arm64_v8.zip godot/bin/
  
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_macos_arm64_v8
          path: editor_macos_arm64_v8.zip

  editor_macos_arm64_qjs:
    # The type of runner that the job will run on
    runs-on: macos-14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - uses: actions/checkout@v4
        with:
          path: Scripts
  
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      - name: Build Deps
        run: |
          curl -L https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip
          # sh godot/misc/scripts/install_vulkan_sdk_macos.sh
          chmod +x $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh
          $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh

      # Runs a set of commands using the runners shell
      - name: Build for arm64
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=macos arch=arm64 use_quickjs=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug p=macos arch=arm64 use_quickjs=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=macos arch=arm64 use_quickjs=yes 
  
      - name: Prepare artifact
        run: |
          strip godot/bin/godot.macos.*.arm64
          chmod +x godot/bin/godot.macos.*.arm64
          7z a -tzip editor_macos_arm64_qjs.zip godot/bin/
  
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_macos_arm64_qjs
          path: editor_macos_arm64_qjs.zip

  editor_macos_arm64_qjs_ng:
    # The type of runner that the job will run on
    runs-on: macos-14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - uses: actions/checkout@v4
        with:
          path: Scripts
  
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      - name: Build Deps
        run: |
          curl -L https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip
          # sh godot/misc/scripts/install_vulkan_sdk_macos.sh
          chmod +x $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh
          $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh

      # Runs a set of commands using the runners shell
      - name: Build for arm64
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=macos arch=arm64 use_quickjs_ng=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug p=macos arch=arm64 use_quickjs_ng=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=macos arch=arm64 use_quickjs_ng=yes 
  
      - name: Prepare artifact
        run: |
          strip godot/bin/godot.macos.*.arm64
          chmod +x godot/bin/godot.macos.*.arm64
          7z a -tzip editor_macos_arm64_qjs_ng.zip godot/bin/
  
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_macos_arm64_qjs_ng
          path: editor_macos_arm64_qjs_ng.zip
        
  editor_macos_arm64_jsc:
    # The type of runner that the job will run on
    runs-on: macos-15
    if: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          repository: godotengine/godot
          path: godot
          ref: ${{ github.event.inputs.godot_ref }}

      - uses: actions/checkout@v4
        with:
          repository: ialex32x/GodotJS
          path: godot/modules/GodotJS
          ref: ${{ github.event.inputs.godotjs_ref }}
          lfs: true
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      - name: Prerequisites
        run: pip install scons

      - name: Build Deps
        run: |
          curl -L https://github.com/ialex32x/GodotJS-Dependencies/releases/download/${{ github.event.inputs.deps_package_tag }}/${{ github.event.inputs.deps_package_tag }}.zip --output v8.zip
          7z x -ogodot/modules/GodotJS v8.zip
          # sh godot/misc/scripts/install_vulkan_sdk_macos.sh
          chmod +x $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh
          $GITHUB_WORKSPACE/Scripts/install_vulkan_sdk_macos.sh

      # Runs a set of commands using the runners shell
      - name: Build for arm64
        run: |
          cd godot
          scons ${{ github.event.inputs.additional_scons_args }} dev_build=yes p=macos arch=arm64 use_jsc=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_debug p=macos arch=arm64 use_jsc=yes 
          scons ${{ github.event.inputs.additional_scons_args }} target=template_release separate_debug_symbols=yes debug_symbols=yes p=macos arch=arm64 use_jsc=yes 
  
      - name: Prepare artifact
        run: |
          strip godot/bin/godot.macos.*.arm64
          chmod +x godot/bin/godot.macos.*.arm64
          7z a -tzip editor_macos_arm64_jsc.zip godot/bin/
  
      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          name: editor_macos_arm64_jsc
          path: editor_macos_arm64_jsc.zip

  publish:
    if: github.event.inputs.bundle_ver_tag != ''

    runs-on: ubuntu-latest
    needs: 
      - editor_windows_x64_v8
      - editor_windows_x64_qjs
      - editor_windows_x64_qjs_ng
      - editor_linux_x64_v8
      - editor_linux_x64_qjs
      - editor_linux_x64_qjs_ng
      - editor_macos_arm64_v8
      - editor_macos_arm64_qjs
      - editor_macos_arm64_qjs_ng

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: editor_*
          path: godot_editor/
          merge-multiple: true

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: GodotJS_${{ github.event.inputs.godotjs_ref }}_Godot_${{ github.event.inputs.godot_ref }}_bundle_${{ github.event.inputs.bundle_ver_tag }}
          name: GodotJS_${{ github.event.inputs.godotjs_ref }}_Godot_${{ github.event.inputs.godot_ref }}_bundle_${{ github.event.inputs.bundle_ver_tag }}
          files: |
            godot_editor/*
